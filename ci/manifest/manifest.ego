<%! func ManifestTmpl(w io.Writer, config Config) error %>
<%% import . "github.com/compozed/travel-agent/models" %%>
---
# ci/manifest/manifest.ego
#
# Travel agent manifest template to cf apps to
# multiple environments
#
# DO NOT MAKE CHANGES TO THIS FILE. Instead modify
# the travel-agent.yml or settings.yml file for this pipeline.
#
# Author:
#   Alan Moran;  bonzofenix@gmail.com
#   Anand Gopal; pegangandkumar@gmail.com
#   Joe Goller;  joe.goller@gmail.com

groups:
- name: deploy
  jobs:
<% for _, env := range config.Envs { %>
  - <%= env.Name %>-deploy
<% } %>

jobs:
<% for _, env := range config.Envs { %>
- name: <%= env.Name %>-deploy
  plan:
  - aggregate:
    - get: app-src
      trigger: true
<% if env.HasFeature("test") { %>
  - task: test
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: (( grab meta.test.docker_repository ))
      run:
        path: app-src/ci/tasks/test.sh
<% } %>
<% if env.HasFeature("build") { %>
  - task: build
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: (( grab meta.build.docker_repository ))
      inputs:
      - name: app-src
      outputs:
      - name: built-app
      run:
        path: app-src/ci/tasks/build.sh
<% } %>
  - put: cf-<%= env.Name %>
    params:
<% if env.HasFeature("build") { %>
      manifest: built-app/manifest.yml
      path: built-app
<% } else { %>
      manifest: app-src/manifest.yml
      path: app-src
<% } %>
<% } %>

resources:
- name: app-src
  source:
    branch:      (( grab meta.app.git_branch ))
    private_key: (( grab meta.app.git_private_key ))
    uri:         (( grab meta.app.git_uri ))
  type: git

<% for _, env := range config.Envs { %>
- name: cf-<%= env.Name %>
  type: cf
  source:
    api:            (( grab meta.<%= env.Name %>.cf_api ))
    username:       (( grab meta.<%= env.Name %>.cf_username ))
    password:       (( grab meta.<%= env.Name %>.cf_password ))
    organization:   (( grab meta.<%= env.Name %>.cf_org ))
    space:          (( grab meta.<%= env.Name %>.cf_space ))
    skip_cert_check: true
<% } %>
