<%! func ManifestTmpl(w io.Writer, config Config) error %>
<%% import . "github.com/compozed/travel-agent/models" %%>
---
# ci/manifest/manifest.ego
#
# Travel agent manifest template to cf apps to
# multiple environments
#
# DO NOT MAKE CHANGES TO THIS FILE. Instead modify
# the travel-agent.yml or settings.yml file for this pipeline.
#
# Author:
#   Alan Moran;  bonzofenix@gmail.com
#   Anand Gopal; pegangandkumar@gmail.com
#   Joe Goller;  joe.goller@gmail.com

meta:
  pipelines:
    uri: https://github.com/bonzocorp/app-ta-deployment.git

<% if config.HasFeature("slack_updates") { %>
  slack:
    uri: (( param "Slack integration webhook uri" ))
<% } %>

groups:
- name: deploy
  jobs:
<% for _, env := range config.Envs { %>
  - <%= env.Name %>-deploy
<% } %>

jobs:
<% for _, env := range config.Envs { %>
- name: <%= env.Name %>-deploy
  plan:
  - in_parallel:
    - get: pipeline
    - get: app-src
      trigger: true
    - get: metadata
<% if env.HasFeature("test") { %>
  - task: test
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: (( grab meta.test.docker_repository ))
      run:
        path: app-src/ci/tasks/test.sh
<% } %>
<% if env.HasFeature("build") { %>
  - task: build
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: (( grab meta.build.docker_repository ))
          tag: edge
      inputs:
      - name: app-src
      outputs:
      - name: built-app
      run:
        path: app-src/ci/tasks/build.sh
<% } %>
  - put: cf-<%= env.Name %>
    params:
<% if env.HasFeature("build") { %>
      manifest: built-app/manifest.yml
      path: built-app
<% } else { %>
      manifest: app-src/manifest.yml
      path: app-src
<% } %>
      environment_variables: (( grab meta.<%= env.Name %>.cf_environment_variables || null ))
      vars:
        app_name: <%= config.Name %>-<%= env.Name %>
  <% if config.HasFeature("slack_updates") { %>
  on_success:
    do:
    - task: deploy-status-notification
      file: pipeline/ci/tasks/deploy-status-notification.yml
      params:
        BUILD_STATUS: success
    - put: notify
      params:
        channel:  (( grab meta.slack.updates.channel ))
        username: (( grab meta.slack.username ))
        icon_url: (( grab meta.slack.success.icon_url ))
        text_file: output/deploy_status_notification
  on_failure:
    do:
    - task: deploy-status-notification
      file: pipeline/ci/tasks/deploy-status-notification.yml
      params:
        BUILD_STATUS: failure
    - put: notify
      params:
        channel:  (( grab meta.slack.updates.channel ))
        username: (( grab meta.slack.username ))
        icon_url: (( grab meta.slack.failure.icon_url ))
        text_file: output/deploy_status_notification
  <% } %>
<% } %>

resources:
- name: app-src
  source:
    branch:      (( grab meta.app.git.branch ))
    private_key: (( grab meta.app.git.private_key || null))
    uri:         (( grab meta.app.git.uri ))
    username:    (( grab meta.app.git.username ))
    password:    (( grab meta.app.git.password))
  type: git

<% for _, env := range config.Envs { %>
- name: cf-<%= env.Name %>
  type: cf
  source:
    api:            (( grab meta.<%= env.Name %>.cf_api ))
    username:       (( grab meta.<%= env.Name %>.cf_username ))
    password:       (( grab meta.<%= env.Name %>.cf_password ))
    organization:   (( grab meta.<%= env.Name %>.cf_org ))
    space:          (( grab meta.<%= env.Name %>.cf_space ))
    skip_cert_check: true
<% } %>
- name: metadata
  type: build-metadata

- name: pipeline
  type: git
  source:
    branch:      (( grab meta.pipelines.branch || "master" ))
    uri:         (( grab meta.pipelines.uri ))


<% if config.HasFeature("slack_updates") { %>
- name: notify
  type: slack-notification
  source:
    url: (( grab meta.slack_updates.uri || "" ))
<% } %>

resource_types:
- name: build-metadata
  type: docker-image
  source:
    repository: mastertinner/build-metadata-resource
<% if config.HasFeature("slack_updates") { %>
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
<% } %>

